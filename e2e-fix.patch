diff --git a/packages/extension/test/e2e/remote-comms.test.ts b/packages/extension/test/e2e/remote-comms.test.ts
index 5e792a77..f6f4e89a 100644
--- a/packages/extension/test/e2e/remote-comms.test.ts
+++ b/packages/extension/test/e2e/remote-comms.test.ts
@@ -107,12 +107,19 @@ test.describe('Remote Communications', () => {
     expect(ocapUrl).toMatch(/^ocap:/u);
     expect(ocapUrl).toContain(peerId2); // Should contain kernel2's peer ID
 
+    // focus on kernel1
+    await popupPage1.bringToFront();
+
     // Go to Object Registry tab on kernel1 to send the remote message
     await popupPage1.click('button:text("Object Registry")');
 
     // Select the first target (alice vat)
     const targetSelect = popupPage1.locator('[data-testid="message-target"]');
-    await targetSelect.selectOption({ index: 1 }); // Skip empty option
+    await expect(targetSelect).toBeVisible();
+    const options = await targetSelect.locator('option').all();
+    expect(options.length).toBeGreaterThan(1);
+    await targetSelect.selectOption({ value: 'ko3' });
+    expect(await targetSelect.inputValue()).toBe('ko3');
 
     // Set method to doRunRun (the remote communication method)
     const methodInput = popupPage1.locator('[data-testid="message-method"]');
@@ -124,7 +131,11 @@ test.describe('Remote Communications', () => {
 
     await popupPage1.waitForTimeout(1000);
 
-    await popupPage1.click('[data-testid="message-send-button"]');
+    const sendButton = popupPage1.locator(
+      '[data-testid="message-send-button"]',
+    );
+    await expect(sendButton).toBeVisible();
+    await sendButton.click();
     const messageResponse = popupPage1.locator(
       '[data-testid="message-response"]',
     );
